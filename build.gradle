plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.asciidoctor.jvm.convert" version "3.3.2"  // (1)
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'

configurations {
    asciidoctorExt // (2)
    compileOnly {
        extendsFrom annotationProcessor
    }
}
jar{
    manifest {
        attributes 'Main-Class' : 'com.example.demo.DemoApplication'
    }
}
repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains:annotations:23.0.0'


    // Spring Boot Starter
    testImplementation ('org.springframework.boot:spring-boot-starter-test')

    // Lombok
    implementation ('org.projectlombok:lombok')
    compileOnly ('org.projectlombok:lombok:1.18.24')
    annotationProcessor ('org.projectlombok:lombok:1.18.24')

    // DB
    runtimeOnly ('mysql:mysql-connector-java') //mysql8
    implementation ('org.springframework.boot:spring-boot-starter-jdbc')
    implementation ('org.springframework.boot:spring-boot-starter-data-jpa')

    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // 마이바티스
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0'

    // Web
    implementation ('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.springframework.boot:spring-boot-starter-web')

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'


    //jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    //AsciiDocs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor' // (3)
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // (4)

    //파일처리관련의존성
    implementation 'commons-io:commons-io:2.6'

    //AWS 의존성
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'org.slf4j:slf4j-api:1.7.32' // SLF4J API
    implementation 'ch.qos.logback:logback-classic:1.2.3' // Logback 구현체

}

test {
    useJUnitPlatform()
}
ext { // (5)
    snippetsDir = file('build/generated-snippets')
}

test { // (6)
    outputs.dir snippetsDir
}

asciidoctor { // (7)
    inputs.dir snippetsDir // (8)
    configurations 'asciidoctorExt' // (9)
    dependsOn test // (10)
}
bootJar {
    duplicatesStrategy = 'exclude'
    dependsOn asciidoctor // (1)
    from("${asciidoctor.outputDir}") { // (2)
        into 'static/docs'
    }
}

//ext {
//    snippetsDir = file('build/generated-snippets') // (5)
//}
//tasks.named('test') {
//    useJUnitPlatform()
//    outputs.dir snippetsDir // (6) -----------
//}
//
//asciidoctor {
//    configurations 'asciidoctorExt' // (7)
//    baseDirFollowsSourceFile() // (8)
//    inputs.dir snippetsDir // (9)
//    dependsOn test // (10)
//}
//
//asciidoctor.doFirst {
//    delete file('src/main/resources/static/docs')  // (11)
//}
//
//task copyDocument(type: Copy) { // (12)
//    dependsOn asciidoctor
//    from file("build/docs/asciidoc")
//    into file("src/main/resources/static/docs")
//}
//
//build {
//    dependsOn copyDocument
//}
